import tweepy

CONSUMER_TOKEN = '8I0edAMtdTBOQEEUBNf9LbE6c'
CONSUMER_SECRET = 'MZ4kzlZqMM3t9rvGuT0mE4SHhOwBchpFHKOtGSeVA0I882H9RJ'

class TwitterOAuthTool:

    def __init__(self):
        self.auth = None
        self.access_token = '832313658311065601-eLFDkUYxcxTGjeY9VdLVGQXpJU21Q0H'
        self.access_token_secret = '5BJtiPFVtlYrlxyTyKmziOu14B2E9m8gnyLMN4dv4qSZF'

    def get_authorization_url(self):
        """Generates the authorizarion URL.
        The user needs to visit the generated url, login to twitter and authorize
        the app to access user's twitter account.
        :Return:
            - String contanining a URL or None in case of an error.
        """
        redirect_url = None
        self.auth = tweepy.OAuthHandler(CONSUMER_TOKEN, CONSUMER_SECRET)
        try:
            redirect_url = self.auth.get_authorization_url()
        except tweepy.TweepError, e:
            print 'Error! Failed to get request token.'
        return redirect_url

    def get_token_and_secret(self, verifier_code):
        """Generate the access-token and access-token-secret for the user who
        just authorized the application.
        :Parameter:
            - `verifier_code`: Verification Pin generated by twitter after the
                user authorized the app.
        :Return:
            - `(token, secret)`: tuple containing key and secret. This should be
                stored and can be used to construct a tweepy api object to
                access user's twitter account.
        """
        try:
            self.auth.get_access_token(verifier_code)
        except tweepy.TweepError:
            print 'Error! Failed to get access token.'
            return None

        self.access_token = self.auth.access_token
        self.access_token_secret = self.auth.access_token_secret
        return (self.access_token, self.access_token_secret)

    def verify_authorization(self):
        """Verify that the user authorizing the application has been done
        successfully.
        """
        auth = tweepy.OAuthHandler(CONSUMER_TOKEN, CONSUMER_SECRET)
        auth.set_access_token(self.access_token, self.access_token_secret)
        api = tweepy.API(auth)
        return api.me()

    def post_status(self, message):
	api = tweepy.API(self.auth)
   	api.update_status(status=message)

if '__main__' == __name__:
    tool = TwitterOAuthTool()
    auth_url = tool.get_authorization_url()
    print 'Visit the following url in a web-browser & authorize this app to access your twitter account.'
    print 'Once you are done authorizing, copy the PIN that twitter generates and paste it below.'
    print '\nURL: %s' %auth_url
    verifier_code = raw_input('PIN: ')
    (token, secret) = tool.get_token_and_secret(verifier_code)
    if (token and secret):
        me = tool.verify_authorization()
        print 'User @%s successfully authorized the app.' %me.screen_name
    else:
	print 'Failed to get the key and secret for the user.'
    tool.post_status('Hello Twitter!')
